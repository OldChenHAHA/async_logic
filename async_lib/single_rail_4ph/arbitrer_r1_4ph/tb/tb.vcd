$date
	Mon Mar 16 18:56:42 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 1 ! a0 $end
$var wire 1 " a1 $end
$var wire 1 # a2 $end
$var wire 1 $ r0 $end
$var reg 1 % r1 $end
$var reg 1 & r2 $end
$var reg 1 ' rst_async_n $end
$scope module U_ARBITER $end
$var wire 1 ! a0 $end
$var wire 1 " a1 $end
$var wire 1 ( a1_n $end
$var wire 1 # a2 $end
$var wire 1 ) a2_n $end
$var wire 1 * g1 $end
$var wire 1 + g2 $end
$var wire 1 $ r0 $end
$var wire 1 , r1 $end
$var wire 1 - r2 $end
$var wire 1 . rstn $end
$var wire 1 / y1 $end
$var wire 1 0 y2 $end
$scope module U_MUTEX $end
$var wire 1 * g1 $end
$var wire 1 + g2 $end
$var wire 1 , r1 $end
$var wire 1 , r2 $end
$var reg 1 1 g1_i $end
$var reg 1 2 g2_i $end
$upscope $end
$scope module U_INV1 $end
$var wire 1 " i $end
$var wire 1 ( zn $end
$upscope $end
$scope module U_INV2 $end
$var wire 1 # i $end
$var wire 1 ) zn $end
$upscope $end
$scope module U_AND2_1 $end
$var wire 1 * a $end
$var wire 1 ) b $end
$var wire 1 / z $end
$upscope $end
$scope module U_AND2_2 $end
$var wire 1 + a $end
$var wire 1 ( b $end
$var wire 1 0 z $end
$upscope $end
$scope module U_MULLER_1 $end
$var wire 1 / a $end
$var wire 1 ! b $end
$var wire 1 . rstn $end
$var reg 1 3 z $end
$upscope $end
$scope module U_MULLER_2 $end
$var wire 1 0 a $end
$var wire 1 ! b $end
$var wire 1 . rstn $end
$var reg 1 4 z $end
$upscope $end
$scope module U_OR2 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 $ z $end
$upscope $end
$upscope $end
$scope task check_8bits $end
$var reg 8 5 expected [7:0] $end
$var reg 8 6 value [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6
bx 5
04
03
02
01
x0
x/
0.
0-
0,
x+
x*
x)
x(
0'
0&
0%
x$
0#
0"
x!
$end
#1000
1)
1(
0+
0*
#2000
00
0/
#3000
0$
#5000
1'
1.
#15000
11
1%
1,
0!
#16000
1*
#17000
1/
#18000
1$
#30000
1!
#31000
01
0%
0,
13
1"
#32000
0*
0(
#33000
0/
#34000
0$
#46000
0!
#47000
03
0"
#48000
1(
#57000
